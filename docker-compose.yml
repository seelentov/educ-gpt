services:
  web:
    container_name: nginx
    image: nginx:stable-alpine
    restart: always
#    depends_on:
#      - app
#      - client
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./app:/var/app
      - ./web/conf.d:/etc/nginx/conf.d
      - ./web/etc-letsencrypt:/etc/letsencrypt
    networks:
      - api
      - client

  client:
    container_name: client
    build:
      context: client
      dockerfile: Dockerfile
    volumes:
      - ./client/:/var/app
    networks:
      - client

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./app:/var/app
    depends_on:
      - db
      - redis
    networks:
      - api

  db:
    image: postgres:15
    restart: unless-stopped
    volumes:
      - ./docker/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    networks:
      - api

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    volumes:
      - ./docker/redis:/data
    networks:
      - api

  certbot:
    image: certbot/certbot
    depends_on:
      - web
    container_name: certbot
    volumes:
      - ./app:/var/app
      - ./web/conf.d:/etc/nginx/conf.d
      - ./web/etc-letsencrypt:/etc/letsencrypt
    command: certonly --webroot --webroot-path=/var/app/storage --email ${ADMIN_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN} -v
    profiles: 
      - certbot
    networks:
      - api

networks:
  api:
    name: api
  client:
    name: client
